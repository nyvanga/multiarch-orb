version: 2.1
orbs:
  multiarch: nanders/multiarch@dev:<<pipeline.git.revision>>
  orb-tools: circleci/orb-tools@11.1
  continuation: circleci/continuation@1.0.0

filters: &filters
  tags:
    only: /.*/

jobs:
  test_get_github_releases_versions:
    executor: continuation/default
    steps:
      - multiarch/get_github_releases:
          owner: hashicorp
          repo: terraform
          jsonfile: /tmp/releases.json
          filter: hashicorp_terraform_(stable|prerelease)
      - multiarch/get_github_releases:
          owner: ProtonMail
          repo: proton-bridge
          jsonfile: /tmp/releases.json
          filter: protonmail_protonbridge_(stable|prerelease)
      - run:
          name: "Show releases"
          command: |
            cat /tmp/releases.json | jq '.'
      - run:
          name: "Use releases"
          command: |
            echo "Latest Terraform release is: '$(cat /tmp/releases.json | jq -r '.hashicorp_terraform_stable_minor')'"
            echo "Pre-release Terraform is: '$(cat /tmp/releases.json | jq -r '.hashicorp_terraform_prerelease_minor')'"
            echo "Latest ProtonMail Bridge release is: '$(cat /tmp/releases.json | jq -r '.protonmail_protonbridge_stable_minor')'"
            echo "Pre-release ProtonMail Bridge is: '$(cat /tmp/releases.json | jq -r '.protonmail_protonbridge_prerelease_minor')'"

  cleanup_docker_hub:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    steps:
      - checkout
      - multiarch/docker_hub_token
      - multiarch/remove_docker_hub_tag:
          image: test-multiarch-orb
          tag: date
      - multiarch/remove_docker_hub_tag:
          image: test-multiarch-orb
          tag: latest
      - multiarch/remove_docker_hub_tag:
          image: test-multiarch-orb
          tag: 1.2.3
      - multiarch/remove_docker_hub_tag:
          image: test-multiarch-orb
          tag: 6.5.4

workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      - orb-tools/pack:
          filters: *filters
      - multiarch/build_x86_64:
          context:
            - docker-hub
          name: test_x86_64
          filters: *filters
          image: "test-multiarch-orb"
          tag_prefix: "test_"
          build_context: tests/
          build_args: "--build-arg WHAT_IN_THE_WORLD=arm64_from_x86_64"
          post-steps:
            - run:
                name: Test x86_64 image
                command: |
                  docker run --rm -it ${DOCKER_USERNAME}/test-multiarch-orb:test_x86_64
      - multiarch/build_arm64:
          context:
            - docker-hub
          name: test_arm64
          filters: *filters
          image: "test-multiarch-orb"
          tag_prefix: "test_"
          build_context: tests/
          build_args: "--build-arg WHAT_IN_THE_WORLD=x86_64_from_arm64"
          post-steps:
            - run:
                name: Test arm64 image
                command: |
                  docker run --rm -it ${DOCKER_USERNAME}/test-multiarch-orb:test_arm64
      - multiarch/create_and_push_manifest:
          context:
            - docker-hub
          name: test_manifest_<< matrix.tag >>
          filters: *filters
          image: "test-multiarch-orb"
          tag_prefix: "test_"
          matrix:
            parameters:
              tag:
                - date
                - latest
                - 1.2.3
                - 6.5.4
            alias: test_manifests
          requires:
            - test_x86_64
            - test_arm64
      - multiarch/remove_architecture_tags:
          context:
            - docker-hub
          name: test_remove_tags
          filters: *filters
          image: "test-multiarch-orb"
          tag_prefix: "test_"
          requires:
            - test_manifests
      - multiarch/build_x86_64:
          context:
            - docker-hub
          name: test_dynamic_build_args
          filters: *filters
          image: "test-multiarch-orb"
          tag_prefix: "test_dynamic_"
          build_context: tests/
          build_args_env_name: "DYNAMIC_ARGS"
          pre-steps:
            - run:
                name: Setup build-args
                command: |
                  echo "export DYNAMIC_ARGS='--build-arg WHAT_IN_THE_WORLD=Dynamic_baby!'" >> ${BASH_ENV}
          post-steps:
            - run:
                name: Test dynamic build-args image
                command: |
                  docker run --rm -it ${DOCKER_USERNAME}/test-multiarch-orb:test_dynamic_x86_64
            - multiarch/docker_hub_token
            - multiarch/remove_docker_hub_tag:
                image: "test-multiarch-orb"
                tag: "test_dynamic_x86_64"
      - cleanup_docker_hub:
          context:
            - docker-hub
          filters: *filters
          requires:
            - test_remove_tags
      - test_get_github_releases_versions:
          filters: *filters
      - orb-tools/publish:
          orb-name: nanders/multiarch
          vcs-type: << pipeline.project.type >>
          pub-type: production
          requires:
            - orb-tools/pack
            - cleanup_docker_hub
            - test_dynamic_build_args
            - test_get_github_releases_versions
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
